# WM INDEPENDENT KEYBINDINGS

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd && notify-send "sxhkd" "Reloaded config"


# BSPWM HOTKEYS

# quit/restart bspwm
super + shift + {q,r}
	bspc {quit,wm -r && notify-send "bspwm" "Reloaded config"}

# close and kill
super + q
	bspc node -c

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest


# STATE/FLAGS

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}


# FOCUS/SWAP

# focus the node in the given direction
super + {_,shift + }{Left,Down,Up,Right}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }n
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc monitor -f {prev,next}

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} focused:'^{1-9,10}'


# PRESELECT

# preselect the direction
super + ctrl + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel


# MOVE/RESIZE

# expand a window by moving one of its side outward
ctrl + alt + {Left,Down,Up,Right}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
ctrl + alt + shift + {Left,Down,Up,Right}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}


# APPLICATION KEYBINDINGS (Super + Alt + Key)

# launch alacritty
super + Return
	alacritty
# launch firefox
super + w
	firefox
# launch ranger
super + e
	alacritty -e ranger
    
    
# ROFI SCRIPTS

# launch ROFI

# launch app menu
super + d
	sh $HOME/.config/rofi/scripts/appsmenu.sh 
	#rofi -theme $HOME/.cache/wal/colors-rofi-dark.rasi -modi drun -show drun

# lock the screen
super + l
	sh $HOME/.config/rofi/scripts/powermenu.sh

# printscreen selected area
shift + Print
	maim -us -c 255,255,255,0.1 -l ~/Pictures/Screenshots/(date +%s).png | xclip -selection clipboard -t image/png && notify-send "maim" "Screenshot copied to clipboard"

# printscreen entire screen
control + Print
	maim -u ~/Pictures/Screenshots/(date +%s).png | xclip -selection clipboard -t image/png && notify-send "maim" "Screenshot copied to clipboard"

# launch keybind menu
super + slash
	sh $HOME/.config/sxhkd/sxhkd-help

# select a random pywal theme
super + r
        sh $HOME/.config/rofi/scripts/walmenu.sh
        #set foo (find "$HOME/Pictures/Wallpapers" -xtype f | sort -R | head -1); pywal $foo

# change keyboard layout
super + space
    {setxkbmap lt, setxkbmap us, setxkbmap gb}

shift + alt + {minus,equal}
    bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))

# dual_monitor
super + shift + bracket{left,right}
    {sh $HOME/.config/sxhkd/single.sh, sh $HOME/.config/sxhkd/dual.sh}

# requires `xbacklight`
XF86MonBrightness{Down,Up}
    xbacklight {-dec 15,-inc 15}

# requires `amixer`
XF86Audio{Mute,LowerVolume,RaiseVolume}
    amixer set Master {toggle,5%-,5%+}

# requires `amixer`
XF86Audio{Mute,LowerVolume,RaiseVolume}
    amixer set Master {toggle,5%-,5%+}

# network menu
control + alt + n
    sh $HOME/.cache/networkmenu.sh
